/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

ext {
    version = '0.3.0'
}

repositories {
    jcenter()
}

allprojects {
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    checkstyle {
        toolVersion = '8.18'
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
        configProperties = [
                'checkstyle.cache.file': "${buildDir}/checkstyle.cache",
        ]
        ignoreFailures = false
        showViolations = true
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
        findbugsTest.enabled = false
    }
    tasks.withType(Pmd){
        reports{
            xml.enabled = true
            html.enabled = true
        }
        pmdTest.enabled = false
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
            options.compilerArgs << "-Werror"
        }
    }
}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // Eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // Add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'A lightweight & highly extensible CQRS Command Bus for implementing application layer or CQRS architectural pattern in Java'
            name 'Java CQRS CommandBus'
            url 'https://github.com/dathoangse/java-cqrs-commandbus'
            organization {
                name 'net.dathoang'
                url 'https://github.com/dathoangse'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/dathoangse/java-cqrs-commandbus/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/dathoangse/java-cqrs-commandbus/blob/develop/LICENSE.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/dathoangse/java-cqrs-commandbus'
                connection 'scm:git:git://github.com/dathoangse/java-cqrs-commandbus.git'
                developerConnection 'scm:git:ssh://git@github.com:dathoangse/java-cqrs-commandbus.git'
            }
            developers {
                developer {
                    name 'Dat Hoang'
                }
            }
        }
    }
}